image: openjdk:11-jdk

variables:
  ANDROID_COMPILE_SDK: "29"
  ANDROID_TEST_SDK: "16"
  ANDROID_BUILD_TOOLS: "30.0.2"
  ANDROID_SDK_TOOLS: "6514223"
  ANDROID_COMPILE_NDK: "21.3.6528147"
  GOOGLE_PUBLISH_JSON: app/misc/android-publisher-account.json

.decrypt_release_account: &decrypt_publish_json
  - apt-get --quiet install gnupg2 --yes
  - gpg --batch --decrypt --output ${GOOGLE_PUBLISH_JSON} --passphrase ${GOOGLE_ACCOUNT_DECRYPTION_KEY} ${GOOGLE_PUBLISH_JSON}.gpg


cache:
  paths:
    # gradle cache
    - .gradle/caches/
    - .gradle/wrapper/


stages:
  - build
  - test
  - release


.configure_android_sdk: &configure_android_sdk
  # download android cmdline tools
  - mkdir -pv android-sdk-linux
  - wget --quiet --output-document=android-cmdline-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-${ANDROID_SDK_TOOLS}_latest.zip
  - unzip -q android-cmdline-tools.zip -d android-sdk-linux/cmdline-tools && rm -v android-cmdline-tools.zip
  # set environment variables
  - export ANDROID_HOME="$PWD/android-sdk-linux"
  - export PATH="$PATH:$ANDROID_HOME/cmdline-tools/tools/bin:$ANDROID_HOME/platform-tools"
  - export NDK_HOME=$ANDROID_HOME/ndk/$ANDROID_COMPILE_NDK
  # install required components
  - echo y | sdkmanager --install "platforms;android-${ANDROID_COMPILE_SDK}" > /dev/null
  - echo y | sdkmanager --install "platform-tools" > /dev/null
  - echo y | sdkmanager --install "extras;android;m2repository" > /dev/null
  - echo y | sdkmanager --install "extras;google;m2repository" > /dev/null
  - echo y | sdkmanager --install "ndk;${ANDROID_COMPILE_NDK}" > /dev/null

.configure_gradle: &configure_gradle
  - export GRADLE_USER_HOME=$PWD/.gradle
  - chmod +x ./gradlew


before_script:
  - apt-get --quiet update --yes
  - *configure_android_sdk
  - *configure_gradle


smoke-build:
  stage: build
  script:
    - ./gradlew assembleRelease


release-alpha:
  stage: release
  except:
    - tags
    - merge_requests
  script:
    - *decrypt_publish_json
    - ./gradlew app:publishGoogleplayRelease
  after_script:
    - rm -f ${GOOGLE_PUBLISH_JSON}
  artifacts:
    paths:
      - app/build/outputs/apk


release-gold:
  stage: release
  except:
    - merge_requests
  only:
    - tags
  script:
    - *decrypt_publish_json
    - ./gradlew publishGoogleplayRelease -PreleaseType=production
  after_script:
    - rm -f ${GOOGLE_PUBLISH_JSON}
  artifacts:
    paths:
      - app/build/outputs/apk